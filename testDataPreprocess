# -*- coding: utf-8 -*-
"""
Created on Mon May 14 13:31:31 2018

@author: mloz & gam
"""
import numpy as np
import pandas as pd
from scipy import stats
from collections import Counter

dataset = pd.read_csv('test.txt')
dataset['age'] = -1
dataset['deliveryDuration'] = -1

# if test set is processed
dataset['dummyReturnShipment'] = -1
dataset = np.array(dataset, dtype = str)

year = []
month = []
day = []
difference = []
for i in range(len(dataset)):
        dataset[i][4] = dataset[i][4].lower()

                        
        if dataset[i][2] != '?' and dataset[i][1] != '?' and dataset[i][10] != '?': 
                year.append((int(dataset[i][2].split("-")[0]) - int(dataset[i][1].split("-")[0]))*365)
                month.append((int(dataset[i][2].split("-")[1]) - int(dataset[i][1].split("-")[1]))*30)
                day.append((int(dataset[i][2].split("-")[2]) - int(dataset[i][1].split("-")[2])))
                difference.append(year[-1] + month[-1] + day[-1])
                dataset[i][14] = int(dataset[i][1].split("-")[0]) - int(dataset[i][10].split("-")[0])
                dataset[i][15] = difference[i]
                
                if difference[i] < 0:
                        difference[i] = "Time error"
        else:
                year.append('error')
                month.append('error')
                day.append('error')
                difference.append('error')
                dataset[i][14] = 'error'
                dataset[i][15] = 'error'

items = np.array(dataset[:,3],int)
colors = np.array(dataset[:,5],str)

#item_color = np.zeros((2945, 84),int)

unique_colors = set(colors)
uniqueColors = []
for i in unique_colors:
        uniqueColors.append(i)

uniqueColors = np.array(uniqueColors)

'''for i in range(len(dataset)):
        color = dataset[i][5]
        for j in range(84):
                if uniqueColors[j] == color:
                        break

"      item_color[int(dataset[i][3])-1,j] += 1'''
'''for i in range(len(dataset)):
        if dataset[i][5] == '?':
                dataset[i][5] = uniqueColors[np.argmax(item_color[int(dataset[i][3])])]
'''
sizes = np.array(dataset[:,4],str)
unique_sizes = set(sizes)
uniqueSizes = []
for i in unique_sizes:
        uniqueSizes.append(i)

uniqueSizes = np.array(uniqueSizes)
     
genders = np.array(dataset[:,9],str)
unique_genders = set(genders)
uniqueGenders = []
for i in unique_genders:
        uniqueGenders.append(i)

uniqueGenders = np.array(uniqueGenders)

states = np.array(dataset[:,11],str)
unique_states = set(states)
uniqueStates = []
for i in unique_states:
        uniqueStates.append(i)

uniqueStates = np.array(uniqueStates)

for i in range(len(dataset)):
        for j in range(len(uniqueGenders)):
                if dataset[i][9] == uniqueGenders[j]:
                        dataset[i][9] = j
                        break
        for j in range(len(uniqueSizes)):
                if dataset[i][4] == uniqueSizes[j]:
                        dataset[i][4] = j
                        break
        for j in range(len(uniqueColors)):
                if dataset[i][5] == uniqueColors[j]:
                        dataset[i][5] = j
                        break
        for j in range(len(uniqueStates)):
                if dataset[i][11] == uniqueStates[j]:
                        dataset[i][11] = j
                        break


                
for i in range(len(dataset)):
        
        if dataset[i][14] == 'error':
                
                cnt = Counter(dataset[:, 14])
                mostCommon = cnt.most_common(2)
                dataset[i][14] = dataset[np.argmax(dataset[:, 14]), 14]
        if dataset[i][15] == 'error':
                dataset[i][15] = dataset[np.argmax(dataset[:, 15]), 15]
                dataset[np.argmax(dataset[:, 14]), 14]
        if dataset[i][5] == '?':
                dataset[i][5] = 25
        
dataset = np.delete(dataset, 12, 1)
dataset = np.delete(dataset, 10, 1)
dataset = np.delete(dataset, 2, 1)
dataset = np.delete(dataset, 1, 1)
dataset = np.delete(dataset, 0, 1)
dataset = np.array(dataset,float) 

dataset[:,[8, 10]] = dataset[:,[10, 8]]


dataset[:, :10] = stats.zscore(dataset[:, :10],axis=0)


np.savetxt("testDataset.csv", dataset, delimiter=",", fmt="%s")
